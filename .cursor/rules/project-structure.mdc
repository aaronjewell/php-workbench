---
alwaysApply: true
description: "PHP Workbench project structure and organization"
---

# PHP Workbench Project Structure

## Overview
PHP Workbench is a VSCode extension that enables PHP developers to quickly test code snippets with full Composer dependency access.

## Core Files
- **Entry Point**: @../../src/extension.ts - Main activation and command registration
- **PHP Entry Point**: @../../bin/workbench - Code runner entry
- **Requirements**: @../../USER_STORIES.md - Feature requirements and acceptance criteria

## Architecture Principles
- **Separation of Concerns**: Keep VSCode API interactions separate from business logic
- **Testability**: All business logic should be unit testable
- **Minimal Dependencies**: Only add dependencies when necessary

## Key Features (from User Stories)
1. **Scratchpad Creation**: Temporary PHP files with syntax highlighting
2. **Instant Execution**: Ctrl+Enter to run PHP code
3. **Composer Integration**: Automatic vendor/autoload.php inclusion
4. **Error Display**: Clear error messages with line numbers
5. **Output Panel**: Dedicated PHP Workbench output channel
5. **Results View**: Dedicated PHP Workbench panel webview view